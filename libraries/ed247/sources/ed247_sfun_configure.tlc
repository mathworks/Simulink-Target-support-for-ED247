
%function ConfigureBlockInstanceSetup (block, system) void

%% Get context variables
%assign modelname = LibGetModelName()

%% Get public H file
%assign headerfilename = LibGetMdlPubHdrBaseName()
%assign hFile = LibCreateSourceFile("Header","Simulink",headerfilename)

%% Get C source file
%assign sourcefilename = LibGetMdlSrcBaseName()
%assign cSource = LibCreateSourceFile("Source","Simulink",sourcefilename)

%% Get C data file
%assign datafilename = LibGetMdlDataSrcBaseName()
%assign cData = LibCreateSourceFile("Source","Simulink",datafilename)

%assign filename  = STRING(SFcnParamSettings.Filename)

%%
%% Declare configurationFile variable
%%
%openfile tmpBuf
extern const char configurationFile[];
%closefile tmpBuf
%<LibSetSourceFileSection(hFile,"Declarations",tmpBuf)>

%%
%% Declare IO variable
%%
%openfile tmpBuf
static ed247simulink::ED247Connector* %<modelname>_connector;
static ed247simulink::Tools* %<modelname>_tools;
%closefile tmpBuf
%<LibSetSourceFileSection(cSource,"Declarations",tmpBuf)>

%%
%% Define configurationFile variable
%%
%openfile tmpBuf
const char configurationFile[] = "%<filename>";
%closefile tmpBuf
%<LibSetSourceFileSection(cData,"Definitions",tmpBuf)>

%endfunction

%function ConfigureStart (block, system) Output

%assign modelname = LibGetModelName()

/*
 * Instantiate global/common objects
 */
%<modelname>_tools = new ed247simulink::Tools();
%<modelname>_connector = new ed247simulink::ED247Connector(configurationFile,"",%<modelname>_tools);

/*
 * Initialize connector
 *	- Allocate memory
 *	- Read configuration
 */
%<modelname>_connector->allocateMemory();
%<modelname>_connector->readED247Configuration();

%endfunction

%function ConfigureOutputs (block, system) Output

%endfunction

%function ConfigureUpdate (block, system) Output

%endfunction

%function ConfigureTerminate (block, system) Output

%assign modelname = LibGetModelName()

/*
 * Free memory
 */
%<modelname>_connector->freeMemory();

%endfunction